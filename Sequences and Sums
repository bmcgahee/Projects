#Author: Ben McGahee
#Date: 9/11/2015
#Title: Sequences and Sums Functions

#The factorial function returns the factorial of a positive integer n or n!, where n! = n(n - 1)(n - 2)*...*1.
#Note that 0! = 1! = 1.
#For example, factorial(5) returns 5! = 5*4*3*2*1 = 120.
def factorial(n):
    if n == 0 or n == 1:
        return 1
    elif n > 1:
        value = n*factorial(n - 1)
        return value
    else:
        print("enter positive integer")

#The combination function returns the values of n choose r formula, which is (n, r) = n!/r!(n - r)!
#For example, if you have 4 balls and want to choose 2 of them, then the number of ways to do this is
#combination(4, 2) = 4!/2!(4 - 2)! = 4!/2!*2! = 6.
def combination(n, r):
    if r <= n:
        combo = factorial(n) / (factorial(r)*factorial(n - r))
        return combo
    else:
        print("r cannot be greater than n")

#The permutation function returns the values of n permute r formula, which is (n, r) = n!/(n - r)!
#For example, if you have the letters A, B, C, D, E, and F and want to arrange 4 of them, then the number of ways to do this is
#permutation(6, 4) = 6!/(6 - 4)! = 6!/2! = 360.
def permutation(n, r):
    if r <= n:
        perm = factorial(n)/factorial(n - r)
        return perm
    else:
        print("r cannot be greater than n")
        

#The fibonacci function asks the user how many Fibonacci numbers he or she wants to see.
#When the user enters the number of Fibonacci to be seen, the function prints out those Fibonacci numbers.
#For example, if the user enters 5, then five Fibonacci numbers 1, 1, 2, 3, and 5 are displayed.
def fibonacci():
    a, b = 0, 1
    count = 0
    fibNum = int(input("How many Fibonacci numbers do you want to see? "))
    if fibNum == 0:
       return
    elif fibNum == 1:
        return 1
    elif fibNum > 1:
        while count < fibNum:
             print (b, "\t", end = '')
             a, b = b, a + b
             count += 1
    else:
        print("enter positive integer")

#These next three sum functions return the sums of i, i^2, and i^3 for some positive, upper limit integer n.
#For example, iSum(3) returns the sum of the first three positive integers 1 + 2 + 3 = 6.
        
def iSum(n):
    if n <= 0:
        print("enter positive integer")
    else:
      total = 0
      for i in range(1, n + 1):
         total += i
      return total

def iSQSum(n):
     if n <= 0:
        print("enter positive integer")
     else:
        total = 0
        for i in range(1, n + 1):
            total += i*i
        return total

def iQBSum(n):
     if n <= 0:
        print("enter positive integer")
     else:
        total = 0
        for i in range(1, n + 1):
            total += i*i*i
        return total
